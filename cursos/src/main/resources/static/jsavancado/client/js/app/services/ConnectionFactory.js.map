{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["ConnectionFactory","dbName","dbVersion","_dbName","_dbVersion","objStoreNames","_objStoreNames","_connection","_connectionClose","Promise","resolve","reject","dbRequest","window","indexedDB","open","onupgradeneeded","connection","event","target","result","_criaObjStores","onsuccess","close","bind","Error","onerror","error","forEach","objectStoreNames","contains","objStoreName","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;IAAMA,iB;AACL,4BAAYC,MAAZ,EAAoBC,SAApB,EAAiD;AAAA;;AAChD,OAAKC,OAAL,GAAeF,MAAf;AACA,OAAKG,UAAL,GAAkBF,SAAlB;;AAFgD,oCAAfG,aAAe;AAAfA,gBAAe;AAAA;;AAGhD,OAAKC,cAAL,GAAsBD,aAAtB;AACA,OAAKE,WAAL,GAAmB,IAAnB;AACA,OAAKC,gBAAL,GAAwB,IAAxB;AACA;;;;kCAEe;AAAA;;AACf,UAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,QAAI,MAAKJ,WAAT,EAAsB;AACrBG,aAAQ,MAAKH,WAAb;AACA;AACK,QAAIK,YAAYC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsB,MAAKZ,OAA3B,EAAoC,MAAKC,UAAzC,CAAhB;AACAQ,cAAUI,eAAV,GAA4B,iBAAS;AACpC,SAAIC,aAAaC,MAAMC,MAAN,CAAaC,MAA9B;AACA,WAAKC,cAAL,CAAoBJ,UAApB;AACA,KAHD;AAIAL,cAAUU,SAAV,GAAsB,iBAAS;AAC9B,WAAKf,WAAL,GAAmBW,MAAMC,MAAN,CAAaC,MAAhC;AACA,WAAKZ,gBAAL,GACC,MAAKD,WAAL,CAAiBgB,KAAjB,CAAuBC,IAAvB,CAA4B,MAAKjB,WAAjC,CADD;AAEA,WAAKA,WAAL,CAAiBgB,KAAjB,GAAyB,YAAW;AACnC,YAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN;AACA,MAFD;AAGAf,aAAQ,MAAKH,WAAb;AACA,KARD;AASAK,cAAUc,OAAV,GAAoB,iBAAS;AAC5Bf,YAAOO,MAAMC,MAAN,CAAaQ,KAApB;AACA,KAFD;AAGN,IArBM,CAAP;AAsBA;;;oCAEiB;AACjB,QAAKnB,gBAAL;AACA,QAAKD,WAAL,GAAmB,IAAnB;AACA,QAAKC,gBAAL,GAAwB,IAAxB;AACA;;;iCAEcS,U,EAAY;AACvB,QAAKX,cAAL,CAAoBsB,OAApB,CAA4B,wBAAgB;AAC3C,QAAIX,WAAWY,gBAAX,CAA4BC,QAA5B,CAAqCC,YAArC,CAAJ,EAAwD;AACvDd,gBAAWe,iBAAX,CAA6BD,YAA7B;AACA;AACDd,eAAWgB,iBAAX,CAA6BF,YAA7B,EACC,EAACG,eAAe,IAAhB,EADD;AAEA,IAND;AAOH","file":"ConnectionFactory.js","sourcesContent":["class ConnectionFactory {\n\tconstructor(dbName, dbVersion, ...objStoreNames) {\n\t\tthis._dbName = dbName;\n\t\tthis._dbVersion = dbVersion;\n\t\tthis._objStoreNames = objStoreNames;\n\t\tthis._connection = null;\n\t\tthis._connectionClose = null;\n\t}\n\t\n\tgetConnection() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (this._connection) {\n\t\t\t\tresolve(this._connection);\n\t\t\t}\n\t        let dbRequest = window.indexedDB.open(this._dbName, this._dbVersion);\n\t        dbRequest.onupgradeneeded = event => {\n\t        \tlet connection = event.target.result;\n\t        \tthis._criaObjStores(connection);\n\t        };\n\t        dbRequest.onsuccess = event => {\n\t        \tthis._connection = event.target.result;\n\t        \tthis._connectionClose = \n\t        \t\tthis._connection.close.bind(this._connection);\n\t        \tthis._connection.close = function() { \n\t        \t\tthrow new Error(\"use connectionFactory.closeConnection()!\");\n\t        \t}\n\t        \tresolve(this._connection);\n\t        };\n\t        dbRequest.onerror = event => {\n\t        \treject(event.target.error);\n\t        };\n\t\t});\n\t}\n\t\n\tcloseConnection() {\n\t\tthis._connectionClose();\n\t\tthis._connection = null;\n\t\tthis._connectionClose = null;\n\t}\n\t\n\t_criaObjStores(connection) {\n    \tthis._objStoreNames.forEach(objStoreName => {\n    \t\tif (connection.objectStoreNames.contains(objStoreName)) {\n    \t\t\tconnection.deleteObjectStore(objStoreName);\n    \t\t}\n    \t\tconnection.createObjectStore(objStoreName, \n    \t\t\t{autoIncrement: true})\n    \t});\n\t}\n}"]}