{"version":3,"sources":["../../app-es6/services/NegociacoesService.js"],"names":["NegociacoesService","_httpService","HttpService","_constants","Constants","_connectionFactory","ConnectionFactory","dbName","dbVersion","negociacaoStoreName","negociacao","negociacoesList","Promise","resolve","reject","getConnection","then","NegociacaoDao","connection","negociacaoDao","adiciona","catch","error","removeTodos","esvazia","getTodasNegociacoes","negociacoes","filter","contains","adicionaNegociacoes","forEach","listaTodos","_getNegociacoes","promises","getNegociacoesSemana","getNegociacoesSemanaAnterior","getNegociacoesSemanaRetrasada","all","negociacoesArrayDeArrays","reduce","umNegociacoesArray","concat","url","get","negociacoesStringArray","map","Negociacao","Date","negociacaoStr","data","quantidade","valor"],"mappings":"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","file":"NegociacoesService.js","sourcesContent":["class NegociacoesService {\n\tconstructor() {\n\t\tthis._httpService = new HttpService();\n        this._constants = new Constants();\n        this._connectionFactory = new ConnectionFactory(this._constants.dbName, \n        \t\tthis._constants.dbVersion, \n        \t\tthis._constants.negociacaoStoreName);\n\t}\n\t\n\tadiciona(negociacao, negociacoesList) {\n\t\treturn new Promise((resolve, reject) => {\n\t    \tthis._connectionFactory.getConnection()\n    \t\t\t.then(connection => new NegociacaoDao(connection, this._constants))\n    \t\t\t.then(negociacaoDao => negociacaoDao.adiciona(negociacao))\n    \t\t\t.then(() => {\n    \t\t\t\tnegociacoesList.adiciona(negociacao);\n    \t\t\t\tresolve();\n    \t\t\t}).catch(error => reject(error));\n\t\t});\n\t}\n\t\n\tremoveTodos(negociacoesList) {\n\t\treturn new Promise((resolve, reject) => {\n\t    \tthis._connectionFactory.getConnection()\n\t\t\t\t.then(connection => new NegociacaoDao(connection, this._constants))\n\t\t\t\t.then(negociacaoDao => negociacaoDao.removeTodos())\n\t\t\t\t.then(() => {\n\t\t\t\t\tnegociacoesList.esvazia();\n\t\t\t\t\tresolve();\n\t\t\t\t}).catch(error => reject(error));\n\t\t});\n\t}\n\t\n\timportaNegociacoes(negociacoesList) {\n\t\treturn new Promise((resolve, reject) => {\n\t    \tthis._connectionFactory.getConnection()\n    \t\t\t.then(connection => new NegociacaoDao(connection, this._constants))\n    \t\t\t.then(negociacaoDao => this.getTodasNegociacoes()\n    \t\t\t\t.then(negociacoes =>  negociacoes.filter(negociacao => \n    \t\t\t\t\t!negociacoesList.contains(negociacao)))\n    \t\t\t\t.then(negociacoes => \n    \t\t\t\t\tnegociacaoDao.adicionaNegociacoes(negociacoes)\n    \t\t\t\t\t\t.then(() => {\n    \t\t\t\t\t\t\tnegociacoes.forEach(negociacao => \n    \t\t\t\t\t\t\t\tnegociacoesList.adiciona(negociacao));\n    \t\t\t\t\t\t\tresolve();\n    \t\t\t\t\t\t})\n    \t\t\t\t).catch(error => reject(error))\n    \t\t\t).catch(error => reject(error)); \n\t\t});\n\t}\n\t\n\tlistaTodos(negociacoesList) {\n\t\treturn new Promise((resolve, reject) => {\n\t        this._connectionFactory.getConnection()\n\t        \t.then(connection => new NegociacaoDao(connection, this._constants))\n\t        \t.then(negociacaoDao => negociacaoDao.listaTodos())\n\t        \t.then(negociacoes => { \n\t        \t\tnegociacoes.forEach(negociacao => \n\t        \t\t\tnegociacoesList.adiciona(negociacao));\n\t        \t\tresolve();\n\t        \t}).catch(error => reject(error));\n\t\t});\n\t}\n\t\n\tgetNegociacoesSemanaRetrasada() {\n    \treturn this._getNegociacoes(\"negociacoes/retrasada\");\n\t}\n\n\tgetNegociacoesSemanaAnterior() {\n    \treturn this._getNegociacoes(\"negociacoes/anterior\");\n\t}\n\n\tgetNegociacoesSemana() {\n    \treturn this._getNegociacoes(\"negociacoes/semana\");\n\t}\n\t\n\tgetTodasNegociacoes() {\n    \tlet promises = [this.getNegociacoesSemana(),\n    \t\tthis.getNegociacoesSemanaAnterior(),\n    \t\tthis.getNegociacoesSemanaRetrasada()];\n    \t\n    \treturn new Promise((resolve, reject) => \n    \t\tPromise.all(promises)\n    \t\t.then(negociacoesArrayDeArrays => \n    \t\t\tresolve(negociacoesArrayDeArrays.reduce(\n    \t\t\t\t(negociacoes, umNegociacoesArray) => \n    \t\t\t\t\tnegociacoes.concat(umNegociacoesArray), []))\n    \t\t).catch(error => reject(error)));\n\t}\n\t\n\t_getNegociacoes(url) {\n\t\treturn new Promise((resolve, reject) => \n\t\t\tthis._httpService.get(url)\n\t\t\t.then(negociacoesStringArray =>\n\t\t\t\tresolve(negociacoesStringArray.map(negociacaoStr => \n\t\t\t\t\tnew Negociacao(\n\t\t\t\t\t\tnew Date(negociacaoStr.data), \n\t\t\t\t\t\tnegociacaoStr.quantidade, \n\t\t\t\t\t\tnegociacaoStr.valor)))\n\t\t\t).catch(error => reject(error)));\n\t}\n}"]}