// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MessagesBar MessagesBar render deveria ocorrer sem falhas! 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    classes={Object {}}
    dismissMessage={[Function]}
    messages={
        Object {
            "message": "OlÃ¡ mundo!",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "action": Array [
        <WithStyles(IconButton)
          aria-label="Close"
          className={undefined}
          color="inherit"
          onClick={[Function]}
>
          <pure(CloseIcon) />
</WithStyles(IconButton)>,
      ],
      "anchorOrigin": Object {
        "horizontal": "center",
        "vertical": "bottom",
      },
      "autoHideDuration": 6000,
      "message": <span
        className={undefined}
        id="message-id"
/>,
      "onClose": [Function],
      "open": true,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "action": Array [
          <WithStyles(IconButton)
            aria-label="Close"
            className={undefined}
            color="inherit"
            onClick={[Function]}
>
            <pure(CloseIcon) />
</WithStyles(IconButton)>,
        ],
        "anchorOrigin": Object {
          "horizontal": "center",
          "vertical": "bottom",
        },
        "autoHideDuration": 6000,
        "message": <span
          className={undefined}
          id="message-id"
/>,
        "onClose": [Function],
        "open": true,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
