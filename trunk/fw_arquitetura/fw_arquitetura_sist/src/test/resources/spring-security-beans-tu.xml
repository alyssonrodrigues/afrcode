<?xml version="1.0" encoding="ISO-8859-1"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- O atributo jaas-api-provision="true" indica ao Spring para incluir o org.springframework.security.web.jaasapi.JaasApiIntegrationFilter 
         na cadeia de execução de requests! Este filtro iniciará o Subject e executará a requisição via Subject.doAs...
         O atributo use-expressions="true" indica ao Spring o uso de expressions Spring nos atributos access das tags intercept-url.
         Veja a lista de possíveis expressões para uso em: http://static.springsource.org/spring-security/site/docs/3.1.x/reference/el-access.html. -->
    <http jaas-api-provision="true" use-expressions="true">
    
        <anonymous enabled="true" />
        
        <http-basic />
    </http>
    
    <!-- Configurações para definição de provider de autenticação para o Spring. Faz-se uso do suporte Spring ao JAAS - veja em
         br.com.afrcode.arquitetura.spring.config.security.SpringSecurityTUConfig a documentação a respeito. -->
    <authentication-manager>
        <authentication-provider ref="authenticationProviderImpl"/>
    </authentication-manager>
    
    <!--  Esta configuração desabilita as anotações @RolesAllowed do JAAS, similares as @Secured do Spring Security 
          para TUS. -->
    <global-method-security jsr250-annotations="disabled" secured-annotations="disabled" />
    
</beans:beans>